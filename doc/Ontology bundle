* 
* Content bundles 
*
* @author: Kai Kühn / ontoprise / 2010
*

Content bundles are deployable entities which contain only wiki pages.

Contents:
    
    1. Prerequisites
    2. Creating a content bundle
    3. Importing a bundle
    4. Formatting XML dump

    
1. Prerequisites
    
    -'Part of bundle'
            A content bundle consists of a set of wiki pages. These pages have to fullfil the following conventions:
			
			* Name of a content bundle is in English (for other languages see language files)and lowercase

			* Content Bundle contains a special annotation:       
              Part of bundle (binary relation property)

			* Use this annotation in each page, the best approach is to embed this annotation in a template which each page is using. 
			  The target is the bundle's description page (see below). This approach is not required, but this makes it easier to 
			  change the name of the bundle later at some point.
			
			* Instances of categories belonging to the bundle are automatically included. That means they may not (and should not) 
              have annotations of 'Part of bundle'. The same holds for templates belongig to the bundle. Those pages will be exported 
			  and saved in the dump. 
            
    - Bundle description page
            There is one special page describing the bundle itself. It has the name of the bundle, i.e. it is the target 
            of the 'Part of bundle' annotations.
            
            Include the following annotations into the Bundle description page:
            
            * Ontology version (1..1), integer number, e.g. 120
            * Dependency (1..n), n-ary annotation (package-id, minVesion, maxVersion)
            * Installation dir (1..1) string
            * Vendor (1..1) string
            * Description (1..1) string
                
            Note: Package-id is the name of the package, e.g. smwhalo or semanticforms.
                
            Example of a Bundle description page:
                
              [[Ontology version::120]]
              [[Dependency::smw;120;140]]
              [[Installation dir::extensions/MyExtension]]
              [[Vendor::Ontoprise]]
              [[Description::Some text]]
                
     - General  
               
            Add every namespace whose instances are to be exported to the global 
			array $smwgNamespacesWithSemanticLinks e.g.
            
            $smwgNamespacesWithSemanticLinks[<id of namespace>] = true;
          
            Define all properties that are used for the export e.g. "Part of bundle" etc. 
			in the wiki with their appropriate types:
            
            * Property:Dependency:
              [[has type::Type:Record]]
              [[has fields::Type:String;Type:Number;Type:Number| ]]
            
            * Property:Description:
              [[has type::Type:String| ]]
            
            * Property:Installation dir:
              [[has type::Type:String| ]]
            
            * Property:Ontology version:
              [[has type::Type:Number| ]]
            
            * Property:Vendor:
              [[has type::Type:String| ]]
            
            * Property:Part of bundle
              [[has type::Type:Page| ]]
   
2. Creating a content bundle    
    
    The PHP script export.php in tools/maintenance is a extended version of the default MediaWiki exporter and does the exporting.
    The script export.php supports the same options as the default MW export script does and these two:
        
        -b <bundlename> (bundlename always lowercase!)
        --nocat (do not consider instances of categories belonging to the bundle, ie. export only _explicitly_ annotated pages)
    
    For convenience the shell script (export.bat/sh) is recommended. Use it like follows:    
    
      export <bundlename> <bundledir>
      
      The output directory gets created automatically.
      
    Example:
    
      export mybundle mybundledir
      
      This exports all pages belonging to the bundle 'mybundle' (including instances of categories of the bundle) and
      returns a dump.xml and deploy.xml file in the directory 'mybundledir'. It also creates a hash value about the 
	  text content of each page and stores it in the dump, too.
    
3. Importing a bundle

    When a dump is imported, the hash value is read and added as annotation to the page. By default the annotation
    is not visible in the rendered text, but you can see it in the factbox.
    
    Import a dump using either maintenance/import or better the smwadmin tool .
    
4. Formatting XML dump

   The wikipage dumps use basically the same XML format than MediaWiki does. But it was extended slightly:
   
     A hash attribute for each page indicates that it has changed or not. The hash is included as 
     annotation during the import process. The revision node contains an additional node called <hash>
     which contains a MD5 hash of the text content.    
	 
    